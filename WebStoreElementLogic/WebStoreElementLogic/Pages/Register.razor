@page "/users/add"
@attribute [Authorize]
@using LoginNamespace = Login;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.WebUtilities;
@using WebStoreElementLogic.Data;
@using WebStoreElementLogic.Entities;
@using WebStoreElementLogic.Interfaces;
@using Microsoft.AspNetCore.Identity;
@inject IUserService UserService;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager


<title>Register</title>
<div class="center">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">

                <div class="card">
                    <div class="card-body">

                        <img src="../images/logos/Element Logic logo red hires.jpg" style="width: 300px; height: 100px;" class="mx-auto d-block mb-4" />

                        <h5 class="card-title text-center mb-4">Add new user for Web Store</h5>

                        <EditForm Model="@newUser" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="form-group border mb-4">
                                <div class="input-group">
                                    <InputText id="username" class="form-control narrow-input" autocomplete="off" placeholder="Username" @bind-Value="@newUser.userName" />
                                    <div class="input-group-append">
                                        <span class="input-group-text" style="background-color: transparent; border: none;">
                                            <!-- Font Awesome icon -->
                                            <i class="fa fa-user fa-2x" style="border: none;"></i>
                                        </span>
                                    </div>
                                </div>
                                <ValidationMessage For="@(() => newUser.userName)" />
                            </div>
                            <div class="form-group border mb-4">
                                <div class="input-group">
                                    <InputText id="password" class="form-control narrow-input" type="password" placeholder="Password" @bind-Value="@newUser.password" />
                                    <div class="input-group-append">
                                        <span class="input-group-text" style="background-color: transparent; border: none;">
                                            <!-- Font Awesome icon -->
                                            <i class="fa fa-lock fa-2x" style="border: none;"></i>
                                        </span>
                                    </div>
                                </div>
                                <ValidationMessage For="@(() => newUser.password)" />
                            </div>

                            <div class="d-flex justify-content-end">
                                <NavLink href="/userpage" class="btn btn-link">Back to user management</NavLink>
                                <button type="submit" class="btn btn-login btn-block">Add user</button>
                            </div>

                        </EditForm>


                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<style>
    .card {
        max-width: 400px;
        margin: 0 auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .narrow-input {
        width: 50px;
    }
</style>


@code {
    [Parameter]
    public int id { get; set; }

    [Required]
    public string Username { get; set; }

    [Required]
    public string Password { get; set; }

    private User newUser = new User();

    private async Task HandleValidSubmit()
    {
        var passwordHasher = new PasswordHasher<User>();
        var hashedPassword = passwordHasher.HashPassword(newUser, newUser.password);
        newUser.password = hashedPassword;

        await UserService.Create(newUser);
        
        NavigationManager.NavigateTo("/userpage");

    }
}
