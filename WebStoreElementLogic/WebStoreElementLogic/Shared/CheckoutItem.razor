@using Entities

<li class="list-group-item d-flex justify-content-between align-items-center">
    @Info.Name
    <span class="d-flex flex-row">
        <span class="badge bg-custom rounded-pill" title="Drag" style="margin-right: 10px;">@Count</span>
        <span class="d-flex flex-row d-xl-none">
            <span role="button" class="badge bg-positive" title="Increase Quantity" @onclick="() => UpdateCount(1)" aria-label="Increase Quantity" style="margin-right: 10px; border: none;">
                <i class="fa fa-plus fa-2xs my-custom-icon"></i>
            </span>
            <span role="button" class="badge bg-minus" title="Decrease Quantity" @onclick="() => UpdateCount(-1)" aria-label="Decrease Quantity" style="margin-right: 10px; border: none;">
                <i class="fa fa-minus fa-2xs my-custom-icon"></i>
            </span>
            <span role="button" class="badge bg-standard" title="Remove" @onclick="() => OnRemove.InvokeAsync(Info)" aria-label="Remove" style="margin-right: 10px;">
                <i class="fa fa-trash fa-2xs my-custom-icon"></i>
            </span>
        </span>
    </span>
</li>

@code {

    [Parameter]
    public Product Info { get; set; }

    [Parameter]
    public int Count { get; set; }

    [Parameter]
    public int Index { get; set; }

    [Parameter]
    public EventCallback<Product> OnRemove { get; set; }

    [Parameter]
    public EventCallback<int[]> OnCountUpdate { get; set; }

    public void UpdateCount(int change)
    {
        Count += change;
        OnCountUpdate.InvokeAsync(new int[] { Index, Count });
    }

}
