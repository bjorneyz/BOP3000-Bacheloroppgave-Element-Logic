@using Microsoft.AspNetCore.Components;
@attribute [Authorize]
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager;
@inject NavigationManager NavigationManager;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@using System.Security.Claims;
@using WebStoreElementLogic.Entities;
@using WebStoreElementLogic.Interfaces;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Identity;
@using WebStoreElementLogic.Data;
@using Microsoft.AspNetCore.Components.Authorization;
@inject IUserService UserService;
@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> UserManager;
@inject AuthenticationStateProvider AuthenticationStateProvider;

@page "/"
<AuthorizeView>
    <Authorized>
        <nav class="navbar navbar-expand-lg navbar-light bg-white p-0 shadow-sm">
            <div class="container-fluid p-0">
                <a href="/home"><img id="img-header" title="Home" width="242" height="97" class="navbar-brand p-0 image" src="\images\logos\Element Logic logo white on red hires.jpg" alt="header_logo"></a>
                <button class="navbar-toggler me-4" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse me-4" id="navbarSupportedContent">
                    <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link @(IsActive("/home"))" aria-current="page" title="Home" href="/home">Home</a>
                        </li>
                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link @(IsActive("/productpage"))" aria-current="page" title="Products" href="/productpage">Products</a>
                        </li>
                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link @(IsActive("/inboundpage"))" aria-current="page" title="Inbound" href="inboundpage">Inbound</a>
                        </li>
                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link @(IsActive("/stockpage"))" aria-current="page" title="Stock" href="stockpage">Stock</a>
                        </li>
                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link @(IsActive("/orderpage"))" aria-current="page" title="Order" href="orderpage">Order</a>
                        </li>
                        <li class="nav-item d-flex justify-content-center @(isAdmin ? "" : "disabled")">
                            @if (isAdmin)
                            {
                                <a class="nav-link @(IsActive("/userpage"))" aria-current="page" title="Users" href="userpage"><i class="fa-solid fa-users"></i></a>
                            }
                            else
                            {
                                <a class="nav-link @(IsActive("/userpage"))" aria-current="page" title="Users" href="userpage"><i class="fa-solid fa-users"></i></a>
                                <!--<span class="nav-link disabled" aria-current="page"><i class="fa-solid fa-users"></i></span>-->
                            }
                        </li>

                        <li class="nav-item d-flex justify-content-center">
                            <a class="nav-link" aria-current="page" title="Log out" href="logout" @onclick="Logout"><i class="fa-solid fa-right-from-bracket"></i></a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </Authorized>
    <NotAuthorized>
        <!-- Put something here to indicate that the user needs to log in -->
    </NotAuthorized>
</AuthorizeView>

<style>
    .nav-link.active {
        font-weight: bold !important;
        color: #b9132f !important;
        text-decoration: underline;
    }
</style>


@code {
    private bool isAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        isAdmin = await CheckAdmin();
    }

    private async Task<bool> CheckAdmin()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user != null && user.Identity.IsAuthenticated)
        {
            // Get the user's claims
            var claims = user.Claims.ToList();

            // Check if the user is an admin
            return claims.Any(c => c.Type == ClaimTypes.Role && c.Value == "Admin");
        }

        return false;
    }



    // Set the navbar link as active when navbar is loaded the first time to show which page the user is on
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;

    }

    private void OnLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    // Force reset of nav menu when navigating to a new page
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            NavigationManager.LocationChanged += (sender, e) => StateHasChanged();
        }
    }

    // Create function to check what is the current page and return "active" if it is the current page to change styling on the nav bar
    private string IsActive(string page) => NavigationManager.Uri.Contains(page) ? "active" : "";

    private void Logout()
    {
        NavigationManager.NavigateTo("/logout", true);
    }
}


